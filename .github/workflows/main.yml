name: DeployResume

on:
  push:
    branches:
      - master
      - main

env:
  GATSBY_API_ENDPOINT: ${{ secrets.GATSBY_API_ENDPOINT }}

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    if: "contains(github.event.head_commit.message, 'run-ci-frontend')"
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - run: npm install
      - run: npm run build
      - name: Deploy static site to S3 bucket
        run: aws s3 sync ./public/ s3://resume-frontend-niclaszll --delete --acl public-read
      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

  deploy-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    if: "contains(github.event.head_commit.message, 'run-ci-backend')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: aws-actions/setup-sam@v0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      # Build inside Docker containers
      - run: sam build --use-container
      # Prevent prompts and failure when the stack is unchanged
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset
